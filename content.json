{"meta":{"title":"기록은 기억을 지배한다","subtitle":null,"description":null,"author":"John Lee","url":"http://leecarus.github.io"},"pages":[],"posts":[{"title":"Synology Nas에서 Doker를 이용하여 Snipe IT 세팅하기","slug":"Synology-Nas에서-Doker를-이용하여-Snipe-IT-세팅하기","date":"2018-07-12T07:21:50.000Z","updated":"2018-07-17T03:40:23.367Z","comments":true,"path":"2018/07/12/Synology-Nas에서-Doker를-이용하여-Snipe-IT-세팅하기/","link":"","permalink":"http://leecarus.github.io/2018/07/12/Synology-Nas에서-Doker를-이용하여-Snipe-IT-세팅하기/","excerpt":"","text":"오픈소스 IT 자산관리 솔루션 - Snipe ITIT 자산관리를 엑셀로 해오다가 솔루션의 필요를 느끼던 중 오픈소스 프로그램을 검색해 보았습니다. 가장 눈에 띄는 프로그램이 Snipe IT 라는 프로그램이었습니다. 프로그램 구성도 잘 되어 있었고, 매뉴얼의 문서화도 상세히 되어 있었으며, 한글도 부분적으로 지원하고 있었습니다. 홈페이지 둘러보기데모버전 체험하기 시놀로지 (Synology) 나스 (Nas)에서 도커 (Docker) 설치리눅스 및 윈도우 서버 모두 설치를 지원하는데, 간단하게 세팅하기 위해 시놀로지 (Synology) 나스 (Nas)에서 도커 (Docker) 컨테이너를 띄워서 세팅을 해보았습니다. 도커 (Docker)가 무엇인지 잘 몰라도 아래 따라하시면 손쉽게 세팅이 가능합니다. 먼저 시놀로지 (Synology) 나스 (Nas)에서 디스크 스테이션 관리자 페이지 (DSM)에 접속합니다. 패키지 센터에서 Docker 를 검색하여 설치합니다. 귀여운 고래가 컨테이터를 싣고가는 아이콘입니다. 이제 내 나스 (Nas)에 도커 (Docker)를 사용할 준비가 모두 끝났습니다. 터미널에서 명령어로 도커 (Docker) 실행 및 세팅도커 (Docker) 아이콘을 실행해서 하나하나 Snipe IT 프로그램을 설치하고 세팅할 수 있지만, 이렇게 하면 조금 번거롭습니다. 그래서 터미널 창을 띄워서 바로 명령어를 입력하여 설정을 해 보도록 하겠습니다. 먼저 PuTTy 와 같은 터미널 접속 프로그램을 통하여 나스 (Nas)에 접속합니다. 만양 접속이 안된다면 제어판 &gt;&gt; 터미널 및 SNMP 메뉴의 터미널 탭에서 Telent 서비스와 SSH 서비스를 활성화 해 주어야 합니다. Snipe-IT 프로그램은 바로 도커 (Docker) 서비스를 이용할 수 있도록 이미지 파일을 제공하고 있습니다. 이 파일을 가지고 와서 나스에 설치합니다. 1sudo docker pull snipe/snipe-it:latest 위와 같이 입력하면 최신 버전을 설치하게 되고, 특정 버전을 설치하기 원하시면 latest 대신에 버전을 입력해 주시면 됩니다. 설치에 필요한 설정값들을 세팅합니다. 먼저 vi 에디터를 통해 my_env_file 파일을 만들어 보겠습니다. 1sudo vi my_env_file 빈 파일이 생성됩니다. 여기에 아래의 내용을 붙여넣습니다. 수정모드로 들어가기 위해서는 i 를 눌러주면 되고 마우스 오른쪽 버튼을 클릭하면 붙여넣기가 됩니다. 123456789101112131415161718192021222324252627# Mysql ParametersMYSQL_ROOT_PASSWORD=YOUR_SUPER_SECRET_PASSWORDMYSQL_DATABASE=snipeitMYSQL_USER=snipeitMYSQL_PASSWORD=YOUR_snipeit_USER_PASSWORD# Email Parameters# - the hostname/IP address of your mailserverMAIL_PORT_587_TCP_ADDR=smtp.whatever.com#the port for the mailserver (probably 587, could be another)MAIL_PORT_587_TCP_PORT=587# the default from address, and from name for emailsMAIL_ENV_FROM_ADDR=youremail@yourdomain.comMAIL_ENV_FROM_NAME=Your Full Email Name# - pick 'tls' for SMTP-over-SSL, 'tcp' for unencryptedMAIL_ENV_ENCRYPTION=tcp# SMTP username and passwordMAIL_ENV_USERNAME=your_email_usernameMAIL_ENV_PASSWORD=your_email_password# Snipe-IT SettingsAPP_ENV=productionAPP_DEBUG=falseAPP_KEY=&lt;&lt;Fill in Later!&gt;&gt;APP_URL=http://127.0.0.1:YOUR_PORT_NUMBERAPP_TIMEZONE=US/PacificAPP_LOCALE=en 설정 내용을 내 환경에 맞게 변경해 줍니다. Mysql 비밀번호는 반드시 입력해 주어야 하고, 이메일 발신/수신 기능을 이용하기 위해서는 SMTP 세팅 값도 알맞게 입력해 줍니다. APP_KEY 값은 나중에 입력할 것입니다. 다 수정하였으면 저장을 해봅시다. vi 에디터가 익숙하지 않으신 ESC 키 한 번 눌러주시고 :wq 를 입력하고 엔터를 치면 문서를 저장한 후 프로그램이 종료됩니다. 이제 MySQL 컨테이너를 실행해 봅니다. Snipe-IT 컨테이너 안에는 데이터베이스가 포함되어 있지 않기 때문에 따로 컨테이너를 실행해서 링크해 주어야 합니다. 아래의 명령어를 실행하면 MySQL 이미지를 다운로드 받아 실행합니다. Snipe-IT에서는 5.6 대의 MySQL 버전을 추천하고 있습니다. 1sudo docker run --name snipe-mysql --env-file=my_env_file --mount source=snipesql-vol,target=/var/lib/mysql -d -P mysql:5.6.40 Snipe-IT 컨테이너 시작하기이제 Snipe-IT 컨테이너를 실행할 준비가 모두 끝났습니다. 먼저 앞서 설정값에서 설정하지 못한 APP_KEY 값을 입력해 주어야 합니다. 다음과 같이 명령어를 실행합니다. 1sudo docker run -rm snipe/snipe-it 그러면 다음과 같은 내용이 출력이 됩니다. 123Please re-run this container with an environment variable $APP_KEYAn example APP_KEY you could use is: base64:D5oGA+zhFSVA3VwuoZoQ21RAcwBtJv/RGiqOcZ7BUvI= base로 시작되는 값이 키값입니다. 다시 my_env_file 파일로 돌아가서 APP_KEY 값에 이 값을 복사해 넣어줍니다. SSL 사용하지 않을 떄SSL을 사용하지 않으면 80 포트로 접속을 합니다. 아래 명령에서 YOUR_PORT_NUMBER 에 내 설정 포트값을 대치한 후 실행합니다. 1docker run -d -p YOUR_PORT_NUMBER:80 --name=\"snipeit\" --link snipe-mysql:mysql --env-file=my_env_file --mount source=snipe-vol,dst=/var/lib/snipeit snipe/snipe-it 특정 버전의 Snipe-IT 프로그램을 설치하였다면 아래와 같이 버전까지 함께 적어주어야 합니다. 1docker run -d -p YOUR_PORT_NUMBER:80 --name=\"snipeit\" --link snipe-mysql:mysql --env-file=my_env_file --mount source=snipe-vol,dst=/var/lib/snipeit snipe/snipe-it:v.4.1.13 SSL 사용할 때SSL을 사용하면 443 포트로 접속을 합니다. 아래 명령에서 YOUR_PORT_NUMBER와 YOUR_SSL_PORT에 내 설정 포트값을 대치한 후 실행합니다. 1docker run -d -p YOUR_PORT_NUMBER:80 -p YOUR_SSL_PORT:443 --name=\"snipeit\" --link snipe-mysql:mysql --mount source=snipe-vol,dst=/var/lib/snipeit --env-file=my_env_file snipe/snipe-it 이제 설정이 모두 끝났습니다. 웹브라우저에서 http://your_ip:YOUR_PORT 로 접속해서 초기 세팅 화면이 잘 보인다면 성공적으로 설치가 된 것입니다.","categories":[{"name":"Nas","slug":"Nas","permalink":"http://leecarus.github.io/categories/Nas/"},{"name":"Docker","slug":"Nas/Docker","permalink":"http://leecarus.github.io/categories/Nas/Docker/"}],"tags":[{"name":"시놀로지 (Synology)","slug":"시놀로지-Synology","permalink":"http://leecarus.github.io/tags/시놀로지-Synology/"},{"name":"IT 자산관리","slug":"IT-자산관리","permalink":"http://leecarus.github.io/tags/IT-자산관리/"},{"name":"오픈소스","slug":"오픈소스","permalink":"http://leecarus.github.io/tags/오픈소스/"},{"name":"Snipe IT","slug":"Snipe-IT","permalink":"http://leecarus.github.io/tags/Snipe-IT/"}]},{"title":"Hexo 테마 추천 - Hueman 테마 설정하기","slug":"Hexo-테마-추천-Hueman-테마-설정하기","date":"2018-07-11T03:04:21.000Z","updated":"2018-07-17T03:37:36.717Z","comments":true,"path":"2018/07/11/Hexo-테마-추천-Hueman-테마-설정하기/","link":"","permalink":"http://leecarus.github.io/2018/07/11/Hexo-테마-추천-Hueman-테마-설정하기/","excerpt":"","text":"헥소 (Hexo)는 테마 설치 및 관리가 쉬운 장점이 있습니다. 그리고 테마들이 전반적으로 깔끔하고 기능도 다양합니다. 헥소 (Hexo) 테마는 이곳에서 확인해 보실 수 있습니다. 그 중에서 Hueman 이라는 테마를 적용해 보겠습니다. 1. Hueman 테마 설치하기내 로컬 저장소의 블로그 루트 폴더에서 깃 (Git) 명령어로 테마를 다운로드 받습니다. 1C:\\blog&gt; git clone https://github.com/ppoffice/hexo-theme-hueman.git themes/hueman 그리고 블로그의 _config.yml 파일 중 다음 부분을 수정하여 새로운 테마를 적용합니다. 1theme: hyeman 테마가 설치되어 있는 폴더 (C:\\blog/themes\\hueman)로 이동하여 폴더 안에 있는 _config.yml.example 파일의 이름을 _config.yml 로 수정합니다. (선택사항) 만약 이 테마에서 제공하는 검색 기능 (Insight Search)를 이용하려면 다음의 패키지를 설치합니다. 1C:\\blog&gt; npm install -S hexo-generator-json-content 2. 테마 설정하기테마가 설치되어 있는 폴더 안의 _config.yml 파일을 수정하면 각종 설정을 변경할 수 있습니다. 2-1. 메뉴 설정메뉴에 추가/수정할 페이지는 아래에서 수동으로 입력할 수 있습니다. 메뉴 이름과 링크 경로 (상대경로 / 절대경로)를 설정해 줍니다. 123456# Menusmenu: Home: / # Delete this row if you don't want categories in your header nav bar Categories: About: /about/index.html “Categories:” 항목을 위와 같이 주석 처리하지 않고 놔두면 자동으로 카테고리 항목이 업데이트 됩니다. 이 기능을 활용하려면 포스트 글 파일에서, 상단부의 front-matter에 categories: &lt;카테고리&gt; 내용을 추가하면 됩니다. 2-2. 커스터마이즈 설정로고 설정로고는 로고 이미지를 업로드한 후 경로만 바꾸어 주면 됩니다. 아래 내용을 수정합니다. 1234logo: width: 165 height: 60 url: images/logo-header.png 테마 색상 설정테마 색상은 메뉴 아래 소셜 링크 팔로우 영역의 색깔을 수정합니다. 1theme_color: '#006bde' 코드 하이라이트 설정코드 영역에서 문법에 따라 내용의 색을 바꾸어 보여줍니다. 기본값을 사용해도 되고, 변경을 하려면 C:\\blog\\themes/hueman/source/css/_highlight 폴더에 있는 파일 이름 중에서 선택하시면 됩니다. 1highlight: androidstudio 사이드바 설정사이드바 위치를 왼쪽, 오른쪽 조정할 수 있습니다. 1sidebar: left # sidebar position, options: left, right 썸네일 설정포스트의 썸네일 이미지 표시를 끄고 켤 수 있습니다. 1thumbnail: ture # enable posts thumbnail, options: true, false 포스트에서 썸네일을 보이게 하려면 각 포스트 파일 상단의 front-matter 부분에 경로를 추가해 주어야 합니다. 1thumbnail: /img/image.jpg 파비콘 설정파비콘은 웹브라우저 탭에서 타이틀 앞에 붙는 작은 아이콘입니다. 사용을 원하시면 파비콘 파일의 경로를 지정해 줍니다. 1favicon: # path to favicon 소셜 링크 설정내가 사용하는 여러가지 SNS 주소를 표시할 수 있습니다. 아이콘은 Font Awesome에서 검색하여 이름을 적고 링크할 계정의 url을 입력합니다. 1234567social_links: # for more icons, please see http://fontawesome.io/icons/#brand twitter: / facebook: / google-plus: / github: https://github.com/ppoffice/hexo-theme-hueman weibo: / rss: / 2-3. 위젯 설정사이드 바에서 사용하고자 하는 여러가지 위젯을 설정합니다. 사용하기 원하는 항목들만 남겨두고, 나머지는 주석 처리해 주세요. 12345678widgets: - catalog - recent_posts - category - archive - tag - tagcloud - links 링크 목록 리스트는 Miscellaneous 항목 내의 links 에서 추가하면 적용됩니다. 12345# Miscellaneousmiscellaneous:... links: Hexo: http://hexo.io 2-4. 검색 설정블로그 내 검색 기능을 설정합니다. 특별히 건드릴 것은 없고 기본적으로 Insight Search를 사용하면 됩니다. hexo-generator-json-content 패키지가 설치되어 있어야 합니다. 12345# Searchsearch: insight: true # you need to install `hexo-generator-json-content` before using Insight Search swiftype: # enter swiftype install key here baidu: false # you need to disable other search engines to use Baidu search, options: true, false 2-5. 댓글 설정포스트에 댓글 기능을 달기 위해서는 다양한 외부 서비스를 이용할 수 있는데, 디스커스 (Disqus) 서비스를 가장 많이 사용합니다. 서비스 이용을 위해서는 사이트에 먼저 가입을 하셔야 합니다. 새로운 웹사이트를 생성하고 생성된 shortname 만 입력해주면 바로 댓글 기능이 활성화 됩니다. 123# Commentcomment: disqus: &lt;shortname&gt; # enter disqus shortname here 2-6. 기타 설정공유기능포스트 글을 공유하기 위한 기능도 제공합니다. 몇 가지 옵션이 있는데 원하는 스타일을 설정하면 됩니다. 12# Shareshare: default # options: jiathis, bdshare, addtoany, default 플러그인 연동그 밖에 다양한 외부 서비스와의 연동을 위한 플러그인을 제공합니다. 여기서 특별히 다루지는 않겠습니다. 더 자세한 내용을 보기 원하시면 테마 공식 문서를 참조해 주세요.","categories":[{"name":"Web","slug":"Web","permalink":"http://leecarus.github.io/categories/Web/"},{"name":"Hexo","slug":"Web/Hexo","permalink":"http://leecarus.github.io/categories/Web/Hexo/"}],"tags":[{"name":"헥소 (Hexo)","slug":"헥소-Hexo","permalink":"http://leecarus.github.io/tags/헥소-Hexo/"}]},{"title":"GitHub 페이지에 Hexo 블로그 설치하기","slug":"GitHub-페이지에-Hexo-블로그-설치하기","date":"2018-07-10T10:23:29.000Z","updated":"2018-07-17T03:37:36.683Z","comments":true,"path":"2018/07/10/GitHub-페이지에-Hexo-블로그-설치하기/","link":"","permalink":"http://leecarus.github.io/2018/07/10/GitHub-페이지에-Hexo-블로그-설치하기/","excerpt":"","text":"깃허브 (GitHub)를 이용하면 간편하게 나만의 블로그를 이용할 수 있습니다. 모든 기능이 무료이면서 자유도가 높고, 다른 서비스에 비해 보안적으로 안전한 장점이 있습니다. 깃허브 (GitHub)에 블로그를 세팅하는 방법 중 지킬 (Jekyll)을 이용하는 방법이 더 대표적인 방법이지만, 개인적으로 루비 (Ruby)라는 언어를 사용하는 지킬 (Jekyll) 블로그의 설치가 조금 더 까다로웠고 (헥소 (Hexo)는 Node.js 기반으로 작동), 결정적으로 헥소 (Hexo) 블로그가 훨씬 예쁘고 사용이 편했습니다. 한글 매뉴얼이 잘 번역되어 있는 것도 큰 장점입니다. 1. 깃허브 (GitHub) 계정에 내 저장소 (Repository) 생성하기깃허브 (GitHub)에서는 내 저장소에서 바로 정적 페이지를 서비스 할 수 있는 기능을 무료로 제공합니다. 새로운 저장소를 생성한 후 저장소 이름을 “내아이디.github.io”로 저장하기만하면 됩니다. 2. 깃 (Git)과 Node.js 프로그램 설치하기깃허브 (GitHub) 서비스는 기본적으로 깃 (Git)을 사용합니다. 깃 (Git)에 대한 내용은 추후에 다루기로 합니다. 내 로컬 컴퓨터에 깃 (Git)이 설치되어 있지 않다면, 이곳에서 다운로드 받아 설치합니다. 또한 헥소를 설치하기 위해서는 Node.js 역시 내 컴퓨터에 설치되어 있어야 합니다. 아직 설치되어 있지 않다면 이곳에서 다운로드 받아 설치합니다. 3. 헥소 (Hexo) 설치하기내 컴퓨터에서 블로그를 설치할 저장소를 생성합니다. 여기서는 C:\\blog 폴더에 설치를 해보겠습니다. 12# 헥소 (Hexo) 클라이언트 설치C:\\blog&gt; npm install hexo-cli -g 123# 헥소 (Hexo) 저장소 생성 및 설치 C:\\blog&gt; hexo initC:\\blog&gt; npm install #4. 로컬 서버 구동내 컴퓨터에서 로컬 서버를 구동하여 헥소 (Hexo) 사이트를 확인할 수 있습니다. 12345# 헥소 (Hexo) 서버 설치C:\\blog&gt; npm install hexo-server --save# 서버 구동C:\\blog&gt; hexo server 웹브라우저에서 127.0.0.1:4000 또는 localhost:4000 에서 확인 가능합니다. 5. 블로그 설정하기헥소 (Hexo) 설정은 _config.yml 파일에서 할 수 있습니다. 내용이 직관적이어서 금방 설정할 수 있습니다. 자세한 여용은 여기를 참고하세요 한가지 깃허브 (GitHub) 페이지로 배포하기 위한 설정은 다음과 같이 하면됩니다. 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: https://github.com/내아이디/내아이디.github.io.git branch: master 6. 블로그 글 작성하기다음과 같이 명령어를 입력하면 포스팅하기 위한 파일이 C:\\blog\\source_posts 폴더에 생성됩니다. 제목에 공백을 포함하면 따옴표로 묶어줍니다. 1C:\\blog&gt; hexo new &lt;title&gt; 7. 테마 설정하기헥소 (Hexo) 공식 사이트에서 테마를 검색하고 다운로드 받을 있습니다. 선택한 테마를 C:\\blog/themes/ 디렉토리에 저장하면 됩니다. 테마 파일 자체를 복사해 넣어도 되고, 깃 (Git)을 이용하여 복제해 와도 됩니다. 테마를 적용하기 위해서는 _config.yml 파일에서 “theme:” 항목에 해당 테마 이름을 설정해 주어야 합니다. 8. 깃허브 (GitHub)로 배포하기깃허브 (GitHub)에 있는 내 저장소로 배포하기 위해 다음과 같이 배포 패키지를 설치합니다. 12345# 헥소 (Hexo) 배포 패키지 설치C:\\blog&gt; npm install hexo-deployer-git --save# 배포하기C:\\blog&gt; hexo deploy --generate 포스팅을 작성한 후 웹상에 반영하기 위해서는 항상 배포하기를 실행해 주셔야 합니다.","categories":[{"name":"Web","slug":"Web","permalink":"http://leecarus.github.io/categories/Web/"},{"name":"Hexo","slug":"Web/Hexo","permalink":"http://leecarus.github.io/categories/Web/Hexo/"}],"tags":[{"name":"깃허브 (GitHub)","slug":"깃허브-GitHub","permalink":"http://leecarus.github.io/tags/깃허브-GitHub/"},{"name":"헥소 (Hexo)","slug":"헥소-Hexo","permalink":"http://leecarus.github.io/tags/헥소-Hexo/"}]}]}